[<ActingPlayerRole>, <Agent><AgentRole>, <AuthorRole>, <BlackPlayerRole>, <ChessCompetitionInstance>, <ChessCompetitionRound>, <ChessCompetitionSeries>, <ChessGame>, <ChessGameManifestation>, <ChessGameResult>, <ChessOpening>, <HalfMove>, <HalfMoveAnnotation>, <Place>, <TemporalExtent>, <WhitePlayerRole>, <annotatesHalfMove>, <atPlace>, <atTime>, <containsAnnotation>, <hasFirstHalfMove>, <hasHalfMove>, <hasLastHalfMove>, <hasManifestation>, <hasOpening><hasResult>, <nextHalfMove>, <partOf>, <performedBy>, <providesAgentRole>, <  >, <encodedAsSAN>, <hasContent>, <hasECOCode>, <hasOpeningName>, <hasPGNFile>, <hasSANRecord>, <originatesFrom>, <#coversRequirements>, <#hasIntent>


 (<ChessGame>  (<  > <ChessCompetitionRound>)) (Annotation(rdfs:comment "This is a guarded domain restriction for providesAgentRole with HalfMove as the domain. The corresponding guarded range restriction since HalfMove may provide roles of types other than ActingPlayerRole"^^  :string)   (<providesAgentRole> <ActingPlayerRole>) <HalfMove>) (<ChessGame> ObjectExactCardinality(1 <hasFirstHalfMove> <HalfMove>)) (<HalfMove> ObjectMaxCardinality(1 <nextHalfMove> <HalfMove>)) (<ChessGame>  (<hasResult> <ChessGameResult>)) (<  >  (<atTime> <TemporalExtent>)) (<BlackPlayerRole> ObjectExactCardinality(1 ObjectInverseOf(<providesAgentRole>) <ChessGame>)) (  (<nextHalfMove> <HalfMove>) <HalfMove>) (<AuthorRole> <AgentRole>) (  (<hasHalfMove> <HalfMove>) <ChessGame>) (<AgentRole> ObjectExactCardinality(1 <performedBy> <Agent>)) (  (<  > <ChessCompetitionInstance>) <ChessCompetitionRound>) (  (<  > <ChessGame>) <HalfMove>) (<HalfMove> ObjectExactCardinality(1 ObjectInverseOf(<hasHalfMove>) <ChessGame>)) (  (<hasOpening> <ChessOpening>) <ChessGame>) (<  >   (<atPlace> <Place>)) ( (<encodedAsSAN>   :string) <ChessGameResult>) (Annotation(rdfs:comment "This is a guarded domain restriction for providesAgentRole with ChessGame as the domain. Note that the corresponding guarded range restriction is not asserted since ChessGame may provide roles of types other than WhitePlayerRole and BlackPlayerRole"^^  :string)   (<providesAgentRole> ObjectUnionOf(<BlackPlayerRole> <WhitePlayerRole>)) <ChessGame>) (<ChessGame> <  >) (<HalfMove> <  >) (<ChessGame>  (<hasHalfMove> <HalfMove>)) (<ChessGame> ObjectExactCardinality(1 <hasLastHalfMove> <HalfMove>)) (<ChessGame>   (<providesAgentRole> <WhitePlayerRole>)) (<HalfMoveAnnotation> DataAllValuesFrom(<hasContent>   :string)) (<AuthorRole> ObjectExactCardinality(1 ObjectInverseOf(<providesAgentRole>) <ChessGameManifestation>)) (  (<annotatesHalfMove> <HalfMove>) <HalfMoveAnnotation>) ( (<hasContent>   :string) <HalfMoveAnnotation>) (  (<hasManifestation> <ChessGameManifestation>) <ChessGame>) (  (<atPlace> <Place>) <  >) (<ChessOpening> DataAllValuesFrom(<hasOpeningName>   :string)) (<ChessGame>  (<hasOpening> <ChessOpening>)) (<ChessGameManifestation>  (<containsAnnotation> <HalfMoveAnnotation>)) (<HalfMoveAnnotation>  (<annotatesHalfMove> <HalfMove>)) (Annotation(rdfs:comment "This is the guarded domain restriction for providesAgentRole with ChessGameManifestation as the domain. The corresponding guarded range restriction for the property is not asserted since ChessGameManifestation may provide roles of types other than AuthorRole"^^  :string)   (<providesAgentRole> <AuthorRole>) <ChessGameManifestation>) (<ChessCompetitionInstance>  (<partOf> <ChessCompetitionSeries>)) (<HalfMove>   (<providesAgentRole> <ActingPlayerRole>)) (<ChessCompetitionRound> <  >) (<  >   (<atTime> <TemporalExtent>)) (<  >  (<  > <  >)) ( (<hasOpeningName>   :string) <ChessOpening>) ( (<hasECOCode>   :string) <ChessOpening>) (<ChessGameResult> DataAllValuesFrom(<encodedAsSAN>   :string)) (<HalfMove> DataAllValuesFrom(<hasSANRecord>   :string)) (  (<  > <  >) <  >) (  (<  > <ChessCompetitionRound>) <ChessGame>) (<HalfMove> ObjectComplementOf(ObjectHasSelf(<nextHalfMove>))) (<HalfMoveAnnotation>  (<hasContent>   :string)) (<HalfMove>  (<nextHalfMove> <HalfMove>)) (<WhitePlayerRole> <AgentRole>) (<ChessOpening> DataAllValuesFrom(<hasECOCode>   :string)) ( (<hasPGNFile>   :anyURI) <ChessGameManifestation>) (<HalfMove>  (<  > <ChessGame>)) (<ActingPlayerRole> <AgentRole>) (<ChessGameManifestation> DataAllValuesFrom(<originatesFrom>   :anyURI)) (<ChessGame>   (<providesAgentRole> <BlackPlayerRole>)) (  (<partOf> <ChessCompetitionSeries>) <ChessCompetitionInstance>) (<ChessCompetitionSeries> <  >) (  (<performedBy> <Agent>) <AgentRole>) (<ChessCompetitionRound>  (<  > <ChessCompetitionInstance>)) (<WhitePlayerRole> ObjectExactCardinality(1 ObjectInverseOf(<providesAgentRole>) <ChessGame>)) (<HalfMoveAnnotation>   (<annotatesHalfMove> <HalfMove>)) (<ChessGame>  (<hasManifestation> <ChessGameManifestation>)) (  (<atTime> <TemporalExtent>) <  >) ( (<hasSANRecord>   :string) <HalfMove>) (  (<containsAnnotation> <HalfMoveAnnotation>) <ChessGameManifestation>) (<ActingPlayerRole> ObjectExactCardinality(1 ObjectInverseOf(<providesAgentRole>) <HalfMove>)) (<AgentRole>  (<performedBy> <Agent>)) (<ChessGameManifestation> DataAllValuesFrom(<hasPGNFile>   :anyURI)) (  (<hasResult> <ChessGameResult>) <ChessGame>) ( (<originatesFrom>   :anyURI) <ChessGameManifestation>) (<ChessCompetitionInstance> <  >) (<  >  (<atPlace> <Place>)) (<BlackPlayerRole> <AgentRole>)