Prefix(:=<https://enslaved.org/ontology/>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(opla:=<http://ontologydesignpatterns.org/opla#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(terms:=<http://purl.org/dc/terms/>)
Prefix(dcterms:=<https://www.dublincore.org/specifications/dublin-core/dcmi-terms/>)


Ontology(<https://enslaved.org/ontology/>
<https://enslaved.org/ontology/1.0.0>
Annotation(dc:title "The Enslaved Ontology")
Annotation(terms:creator "Alicia M. Sheill")
Annotation(terms:creator "Catherine Foley")
Annotation(terms:creator "Cogan Shimizu")
Annotation(terms:creator "Dean Rehberger")
Annotation(terms:creator "Duncan Tarr")
Annotation(terms:creator "Ethan Watrall")
Annotation(terms:creator "Jeff Mixter")
Annotation(terms:creator "Pascal Hitzler")
Annotation(terms:creator "Quinn Hirt")
Annotation(terms:creator "Ryan Carty")
Annotation(terms:creator "Seila Gonzalez Estrecha")
Annotation(terms:creator "Walter Hawthorne")
Annotation(terms:license "https://creativecommons.org/licenses/by/4.0/"^^xsd:anyURI)
Annotation(terms:license "CC by 4.0")
Annotation(terms:rights "CC by 4.0")

Declaration(Class(:AgeCategory))
Declaration(Class(:AgeRecord))
Declaration(Class(:Agent))
Declaration(Class(:AgentRecord))
Declaration(Class(:Coordinates))
Declaration(Class(:Description))
Declaration(Class(:DocumentTypes))
Declaration(Class(:ECVO))
Declaration(Class(:EntityWithProvenance))
Declaration(Class(:Event))
Declaration(Class(:EventTypes))
Declaration(Class(:ExternalReference))
Declaration(Class(:ExternalReferent))
Declaration(Class(:InterAgentRelationshipRecord))
Declaration(Class(:InterAgentRelationshipTypes))
Declaration(Class(:LicenseInformation))
Declaration(Class(:NameRecord))
Declaration(Class(:NameVariant))
Declaration(Class(:OccupationRecord))
Declaration(Class(:Occupations))
Declaration(Class(:Organization))
Declaration(Class(:OriginRecord))
Declaration(Class(:PSCategories))
Declaration(Class(:ParticipantRoleRecord))
Declaration(Class(:ParticipantRoles))
Declaration(Class(:Person))
Declaration(Class(:PersonRecord))
Declaration(Class(:PersonStatusRecord))
Declaration(Class(:Place))
Declaration(Class(:PlaceTypes))
Declaration(Class(:PlacesCV))
Declaration(Class(:ProvenanceActivity))
Declaration(Class(:RaceRecord))
Declaration(Class(:ResearchProject))
Declaration(Class(:ResearchProjectContributorRole))
Declaration(Class(:ResearchProjectPIRole))
Declaration(Class(:Researcher))
Declaration(Class(:SexRecord))
Declaration(Class(:SexTypes))
Declaration(Class(:TemporalExtent))
Declaration(Class(:TimeSpan))
Declaration(ObjectProperty(:agentRecordSelfProperty))
Declaration(ObjectProperty(:asPlaceCV))
Declaration(ObjectProperty(:atPlace))
Declaration(ObjectProperty(:attributedTo))
Declaration(ObjectProperty(:eventSelfProperty))
Declaration(ObjectProperty(:fallsWithin))
Declaration(ObjectProperty(:generatedBy))
Declaration(ObjectProperty(:hasAgeRecord))
Declaration(ObjectProperty(:hasAgentRecord))
Declaration(ObjectProperty(:hasCoordinates))
Declaration(ObjectProperty(:hasDescriptionText))
Declaration(ObjectProperty(:hasECVO))
Declaration(ObjectProperty(:hasEventType))
Declaration(ObjectProperty(:hasExternalReference))
Declaration(ObjectProperty(:hasInterAgentRelationshipRecord))
Declaration(ObjectProperty(:hasInterAgentRelationshipType))
Declaration(ObjectProperty(:hasLicenseInformation))
Declaration(ObjectProperty(:hasNameRecord))
Declaration(ObjectProperty(:hasNameVariant))
Declaration(ObjectProperty(:hasOccupationRecord))
Declaration(ObjectProperty(:hasOriginRecord))
Declaration(ObjectProperty(:hasOriginalSourceType))
Declaration(ObjectProperty(:hasParticipantRoleRecord))
Declaration(ObjectProperty(:hasParticipantRoleType))
Declaration(ObjectProperty(:hasPersonRecord))
Declaration(ObjectProperty(:hasPersonStatusRecord))
Declaration(ObjectProperty(:hasPlaceType))
Declaration(ObjectProperty(:hasPreferredNameVariant))
Declaration(ObjectProperty(:hasRaceRecord))
Declaration(ObjectProperty(:hasSexRecord))
Declaration(ObjectProperty(:hasStatusGeneratedEvent))
Declaration(ObjectProperty(:hasTemporalExtent))
Declaration(ObjectProperty(:hasValue))
Declaration(ObjectProperty(:isDirectlyBasedOn))
Declaration(ObjectProperty(:isRelationshipFrom))
Declaration(ObjectProperty(:isRelationshipTo))
Declaration(ObjectProperty(:performedBy))
Declaration(ObjectProperty(:providesParticipantRole))
Declaration(ObjectProperty(:recordedAt))
Declaration(ObjectProperty(:refersTo))
Declaration(ObjectProperty(:refersToEvent))
Declaration(ObjectProperty(:refersToPlaceOfOrigin))
Declaration(ObjectProperty(:reportsOn))
Declaration(ObjectProperty(:roleProvidedBy))
Declaration(ObjectProperty(:spatiallyLocatedIn))
Declaration(ObjectProperty(:subeventOf))
Declaration(ObjectProperty(:used))
Declaration(DataProperty(:asText))
Declaration(DataProperty(:availableFrom))
Declaration(DataProperty(:contains))
Declaration(DataProperty(:endsAt))
Declaration(DataProperty(:fullNameAsString))
Declaration(DataProperty(:hasAgeValue))
Declaration(DataProperty(:hasAlternateName))
Declaration(DataProperty(:hasFirstNameAsString))
Declaration(DataProperty(:hasLatitude))
Declaration(DataProperty(:hasLongitude))
Declaration(DataProperty(:hasName))
Declaration(DataProperty(:hasReferenceURI))
Declaration(DataProperty(:hasSurnameAsString))
Declaration(DataProperty(:occursAfter))
Declaration(DataProperty(:occursBefore))
Declaration(DataProperty(:startsAt))
Declaration(DataProperty(:withID))
Declaration(AnnotationProperty(opla:isNativeTo))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(terms:creator))
Declaration(AnnotationProperty(terms:license))
Declaration(AnnotationProperty(terms:rights))
Declaration(Datatype(xsd:date))

############################
#   Object Properties
############################

# Object Property: :agentRecordSelfProperty (:agentRecordSelfProperty)

AnnotationAssertion(opla:isNativeTo :agentRecordSelfProperty "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Object Property: :asPlaceCV (:asPlaceCV)

AnnotationAssertion(opla:isNativeTo :asPlaceCV "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Object Property: :atPlace (:atPlace)

AnnotationAssertion(opla:isNativeTo :atPlace "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Object Property: :attributedTo (:attributedTo)

AnnotationAssertion(opla:isNativeTo :attributedTo "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :eventSelfProperty (:eventSelfProperty)

AnnotationAssertion(opla:isNativeTo :eventSelfProperty "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Object Property: :fallsWithin (:fallsWithin)

AnnotationAssertion(opla:isNativeTo :fallsWithin "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)

# Object Property: :generatedBy (:generatedBy)

AnnotationAssertion(opla:isNativeTo :generatedBy "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :hasAgeRecord (:hasAgeRecord)

SubObjectPropertyOf(:hasAgeRecord :hasPersonRecord)

# Object Property: :hasAgentRecord (:hasAgentRecord)

AnnotationAssertion(opla:isNativeTo :hasAgentRecord "https://enslaved.org/ontology/Agent"^^rdfs:Literal)

# Object Property: :hasCoordinates (:hasCoordinates)

AnnotationAssertion(opla:isNativeTo :hasCoordinates "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Object Property: :hasDescriptionText (:hasDescriptionText)

AnnotationAssertion(opla:isNativeTo :hasDescriptionText "https://enslaved.org/ontology/Agent"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasDescriptionText "https://enslaved.org/ontology/Event"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasDescriptionText "https://enslaved.org/ontology/Place"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasDescriptionText "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)

# Object Property: :hasECVO (:hasECVO)

AnnotationAssertion(opla:isNativeTo :hasECVO "https://enslaved.org/ontology/OriginRecord"^^rdfs:Literal)
SubObjectPropertyOf(:hasECVO owl:topObjectProperty)

# Object Property: :hasEventType (:hasEventType)

AnnotationAssertion(opla:isNativeTo :hasEventType "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Object Property: :hasExternalReference (:hasExternalReference)

AnnotationAssertion(opla:isNativeTo :hasExternalReference "https://enslaved.org/ontology/Agent"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasExternalReference "https://enslaved.org/ontology/Event"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasExternalReference "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)

# Object Property: :hasInterAgentRelationshipRecord (:hasInterAgentRelationshipRecord)

SubObjectPropertyOf(:hasInterAgentRelationshipRecord :hasAgentRecord)

# Object Property: :hasInterAgentRelationshipType (:hasInterAgentRelationshipType)

AnnotationAssertion(opla:isNativeTo :hasInterAgentRelationshipType "https://enslaved.org/ontology/InterAgentRelationshipRecord"^^rdfs:Literal)

# Object Property: :hasLicenseInformation (:hasLicenseInformation)

AnnotationAssertion(opla:isNativeTo :hasLicenseInformation "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :hasNameRecord (:hasNameRecord)

SubObjectPropertyOf(:hasNameRecord :hasAgentRecord)

# Object Property: :hasNameVariant (:hasNameVariant)

AnnotationAssertion(opla:isNativeTo :hasNameVariant "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)

# Object Property: :hasOccupationRecord (:hasOccupationRecord)

SubObjectPropertyOf(:hasOccupationRecord :hasPersonRecord)

# Object Property: :hasOriginRecord (:hasOriginRecord)

SubObjectPropertyOf(:hasOriginRecord :hasPersonRecord)

# Object Property: :hasOriginalSourceType (:hasOriginalSourceType)

AnnotationAssertion(opla:isNativeTo :hasOriginalSourceType "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :hasParticipantRoleRecord (:hasParticipantRoleRecord)

SubObjectPropertyOf(:hasParticipantRoleRecord :hasAgentRecord)
InverseObjectProperties(:hasParticipantRoleRecord :roleProvidedBy)

# Object Property: :hasParticipantRoleType (:hasParticipantRoleType)

AnnotationAssertion(opla:isNativeTo :hasParticipantRoleType "https://enslaved.org/ontology/ParticipantRoleRecord"^^rdfs:Literal)

# Object Property: :hasPersonRecord (:hasPersonRecord)

SubObjectPropertyOf(:hasPersonRecord :hasAgentRecord)

# Object Property: :hasPersonStatusRecord (:hasPersonStatusRecord)

SubObjectPropertyOf(:hasPersonStatusRecord :hasPersonRecord)

# Object Property: :hasPlaceType (:hasPlaceType)

AnnotationAssertion(opla:isNativeTo :hasPlaceType "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Object Property: :hasPreferredNameVariant (:hasPreferredNameVariant)

AnnotationAssertion(opla:isNativeTo :hasPreferredNameVariant "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)
SubObjectPropertyOf(:hasPreferredNameVariant :hasNameVariant)

# Object Property: :hasRaceRecord (:hasRaceRecord)

SubObjectPropertyOf(:hasRaceRecord :hasPersonRecord)

# Object Property: :hasSexRecord (:hasSexRecord)

SubObjectPropertyOf(:hasSexRecord :hasPersonRecord)

# Object Property: :hasStatusGeneratedEvent (:hasStatusGeneratedEvent)

AnnotationAssertion(opla:isNativeTo :hasStatusGeneratedEvent "https://enslaved.org/ontology/PersonStatusRecord"^^rdfs:Literal)
SubObjectPropertyOf(:hasStatusGeneratedEvent :refersToEvent)

# Object Property: :hasTemporalExtent (:hasTemporalExtent)

AnnotationAssertion(opla:isNativeTo :hasTemporalExtent "https://enslaved.org/ontology/AgentRecord"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasTemporalExtent "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Object Property: :hasValue (:hasValue)

AnnotationAssertion(opla:isNativeTo :hasValue "https://enslaved.org/ontology/AgeRecord"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasValue "https://enslaved.org/ontology/OccupationRecord"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasValue "https://enslaved.org/ontology/PersonStatusRecord"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasValue "https://enslaved.org/ontology/SexRecord"^^rdfs:Literal)

# Object Property: :isDirectlyBasedOn (:isDirectlyBasedOn)

AnnotationAssertion(opla:isNativeTo :isDirectlyBasedOn "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :isRelationshipFrom (:isRelationshipFrom)

AnnotationAssertion(opla:isNativeTo :isRelationshipFrom "https://enslaved.org/ontology/InterAgentRelationshipRecord"^^rdfs:Literal)

# Object Property: :isRelationshipTo (:isRelationshipTo)

AnnotationAssertion(opla:isNativeTo :isRelationshipTo "https://enslaved.org/ontology/InterAgentRelationshipRecord"^^rdfs:Literal)

# Object Property: :performedBy (:performedBy)

AnnotationAssertion(opla:isNativeTo :performedBy "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :providesParticipantRole (:providesParticipantRole)

AnnotationAssertion(opla:isNativeTo :providesParticipantRole "https://enslaved.org/ontology/Event"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :providesParticipantRole "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)

# Object Property: :recordedAt (:recordedAt)

AnnotationAssertion(opla:isNativeTo :recordedAt "https://enslaved.org/ontology/AgentRecord"^^rdfs:Literal)

# Object Property: :refersTo (:refersTo)

AnnotationAssertion(opla:isNativeTo :refersTo "https://enslaved.org/ontology/ExternalReference"^^rdfs:Literal)

# Object Property: :refersToEvent (:refersToEvent)

AnnotationAssertion(opla:isNativeTo :refersToEvent "https://enslaved.org/ontology/PersonStatusRecord"^^rdfs:Literal)

# Object Property: :refersToPlaceOfOrigin (:refersToPlaceOfOrigin)

AnnotationAssertion(opla:isNativeTo :refersToPlaceOfOrigin "https://enslaved.org/ontology/OriginRecord"^^rdfs:Literal)

# Object Property: :reportsOn (:reportsOn)

AnnotationAssertion(opla:isNativeTo :reportsOn "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Object Property: :roleProvidedBy (:roleProvidedBy)

AnnotationAssertion(opla:isNativeTo :roleProvidedBy "https://enslaved.org/ontology/ParticipantRoleRecord"^^rdfs:Literal)

# Object Property: :spatiallyLocatedIn (:spatiallyLocatedIn)

AnnotationAssertion(opla:isNativeTo :spatiallyLocatedIn "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Object Property: :subeventOf (:subeventOf)

AnnotationAssertion(opla:isNativeTo :subeventOf "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Object Property: :used (:used)

AnnotationAssertion(opla:isNativeTo :used "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)


############################
#   Data Properties
############################

# Data Property: :asText (:asText)

AnnotationAssertion(opla:isNativeTo :asText "https://enslaved.org/ontology/Description"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :asText "https://enslaved.org/ontology/RaceRecord"^^rdfs:Literal)

# Data Property: :availableFrom (:availableFrom)

AnnotationAssertion(opla:isNativeTo :availableFrom "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Data Property: :contains (:contains)

AnnotationAssertion(opla:isNativeTo :contains "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)

# Data Property: :endsAt (:endsAt)

AnnotationAssertion(opla:isNativeTo :endsAt "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)

# Data Property: :fullNameAsString (:fullNameAsString)

AnnotationAssertion(opla:isNativeTo :fullNameAsString "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)

# Data Property: :hasAgeValue (:hasAgeValue)

AnnotationAssertion(opla:isNativeTo :hasAgeValue "https://enslaved.org/ontology/AgeRecord"^^rdfs:Literal)

# Data Property: :hasAlternateName (:hasAlternateName)

AnnotationAssertion(opla:isNativeTo :hasAlternateName "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Data Property: :hasFirstNameAsString (:hasFirstNameAsString)

AnnotationAssertion(opla:isNativeTo :hasFirstNameAsString "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)

# Data Property: :hasLatitude (:hasLatitude)

AnnotationAssertion(opla:isNativeTo :hasLatitude "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Data Property: :hasLongitude (:hasLongitude)

AnnotationAssertion(opla:isNativeTo :hasLongitude "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Data Property: :hasName (:hasName)

AnnotationAssertion(opla:isNativeTo :hasName "https://enslaved.org/ontology/Event"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasName "https://enslaved.org/ontology/Place"^^rdfs:Literal)
AnnotationAssertion(opla:isNativeTo :hasName "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)

# Data Property: :hasReferenceURI (:hasReferenceURI)

AnnotationAssertion(opla:isNativeTo :hasReferenceURI "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Data Property: :hasSurnameAsString (:hasSurnameAsString)

AnnotationAssertion(opla:isNativeTo :hasSurnameAsString "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)

# Data Property: :occursAfter (:occursAfter)

AnnotationAssertion(opla:isNativeTo :occursAfter "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)

# Data Property: :occursBefore (:occursBefore)

AnnotationAssertion(opla:isNativeTo :occursBefore "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)

# Data Property: :startsAt (:startsAt)

AnnotationAssertion(opla:isNativeTo :startsAt "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)

# Data Property: :withID (:withID)

AnnotationAssertion(opla:isNativeTo :withID "https://enslaved.org/ontology/ExternalReference"^^rdfs:Literal)



############################
#   Classes
############################

# Class: owl:Thing (owl:Thing)

SubClassOf(owl:Thing ObjectAllValuesFrom(:atPlace :Place))
SubClassOf(owl:Thing ObjectAllValuesFrom(:hasCoordinates :Coordinates))
SubClassOf(owl:Thing ObjectAllValuesFrom(:hasDescriptionText :Description))
SubClassOf(owl:Thing ObjectAllValuesFrom(:hasExternalReference :ExternalReference))
SubClassOf(owl:Thing ObjectAllValuesFrom(:hasNameVariant :NameVariant))
SubClassOf(owl:Thing ObjectAllValuesFrom(:hasTemporalExtent :TemporalExtent))
SubClassOf(owl:Thing ObjectAllValuesFrom(:providesParticipantRole :ParticipantRoleRecord))
SubClassOf(owl:Thing ObjectAllValuesFrom(:refersToEvent :Event))
SubClassOf(owl:Thing ObjectAllValuesFrom(:subeventOf :Event))
SubClassOf(owl:Thing ObjectMaxCardinality(1 ObjectInverseOf(:hasDescriptionText)))
SubClassOf(owl:Thing ObjectMaxCardinality(1 ObjectInverseOf(:hasExternalReference)))
SubClassOf(owl:Thing DataAllValuesFrom(:fullNameAsString xsd:string))
SubClassOf(owl:Thing DataAllValuesFrom(:hasAlternateName xsd:string))
SubClassOf(owl:Thing DataAllValuesFrom(:hasFirstNameAsString xsd:string))
SubClassOf(owl:Thing DataAllValuesFrom(:hasLatitude xsd:double))
SubClassOf(owl:Thing DataAllValuesFrom(:hasLongitude xsd:double))
SubClassOf(owl:Thing DataAllValuesFrom(:hasName xsd:string))
SubClassOf(owl:Thing DataAllValuesFrom(:hasSurnameAsString xsd:string))

# Class: :AgeCategory (:AgeCategory)

AnnotationAssertion(opla:isNativeTo :AgeCategory "https://enslaved.org/ontology/AgeRecord"^^rdfs:Literal)

# Class: :AgeRecord (:AgeRecord)

AnnotationAssertion(opla:isNativeTo :AgeRecord "https://enslaved.org/ontology/AgeRecord"^^rdfs:Literal)
SubClassOf(:AgeRecord :AgentRecord)
SubClassOf(:AgeRecord ObjectUnionOf(ObjectSomeValuesFrom(:hasValue :AgeCategory) DataSomeValuesFrom(:hasAgeValue xsd:double)))
SubClassOf(:AgeRecord ObjectMaxCardinality(1 :hasValue :AgeCategory))
SubClassOf(:AgeRecord DataMaxCardinality(1 :hasAgeValue xsd:double))

# Class: :Agent (:Agent)

AnnotationAssertion(opla:isNativeTo :Agent "https://enslaved.org/ontology/AgentRecord"^^rdfs:Literal)
SubClassOf(:Agent ObjectMinCardinality(0 :hasAgentRecord :AgentRecord))
SubClassOf(:Agent ObjectMinCardinality(0 :hasDescriptionText :Description))
SubClassOf(:Agent ObjectMinCardinality(0 :hasExternalReference :ExternalReference))

# Class: :AgentRecord (:AgentRecord)

AnnotationAssertion(opla:isNativeTo :AgentRecord "https://enslaved.org/ontology/AgentRecord"^^rdfs:Literal)
SubClassOf(:AgentRecord :EntityWithProvenance)
SubClassOf(:AgentRecord ObjectExactCardinality(1 :hasTemporalExtent :TemporalExtent))
SubClassOf(:AgentRecord ObjectExactCardinality(1 ObjectInverseOf(:hasAgentRecord) :Agent))
SubClassOf(:AgentRecord ObjectMaxCardinality(1 :isDirectlyBasedOn :EntityWithProvenance))
SubClassOf(:AgentRecord ObjectMaxCardinality(1 :recordedAt :Event))
SubClassOf(:AgentRecord ObjectMaxCardinality(1 :reportsOn :Event))
SubClassOf(:AgentRecord ObjectHasSelf(:agentRecordSelfProperty))

# Class: :Coordinates (:Coordinates)

AnnotationAssertion(opla:isNativeTo :Coordinates "https://enslaved.org/ontology/Place"^^rdfs:Literal)
SubClassOf(:Coordinates DataSomeValuesFrom(:hasLatitude xsd:double))
SubClassOf(:Coordinates DataSomeValuesFrom(:hasLongitude xsd:double))

# Class: :Description (:Description)

AnnotationAssertion(opla:isNativeTo :Description "https://enslaved.org/ontology/Description"^^rdfs:Literal)
SubClassOf(:Description :EntityWithProvenance)
SubClassOf(:Description DataExactCardinality(1 :asText xsd:string))

# Class: :DocumentTypes (:DocumentTypes)

AnnotationAssertion(opla:isNativeTo :DocumentTypes "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Class: :ECVO (:ECVO)

AnnotationAssertion(opla:isNativeTo :ECVO "https://enslaved.org/ontology/OriginRecord"^^rdfs:Literal)

# Class: :EntityWithProvenance (:EntityWithProvenance)

AnnotationAssertion(opla:isNativeTo :EntityWithProvenance "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)
SubClassOf(:EntityWithProvenance ObjectSomeValuesFrom(:hasLicenseInformation :LicenseInformation))
SubClassOf(:EntityWithProvenance ObjectAllValuesFrom(:attributedTo :Agent))
SubClassOf(:EntityWithProvenance ObjectAllValuesFrom(:generatedBy :ProvenanceActivity))
SubClassOf(:EntityWithProvenance ObjectAllValuesFrom(:hasLicenseInformation :LicenseInformation))
SubClassOf(:EntityWithProvenance ObjectAllValuesFrom(:hasOriginalSourceType :DocumentTypes))
SubClassOf(:EntityWithProvenance ObjectAllValuesFrom(:isDirectlyBasedOn :EntityWithProvenance))
SubClassOf(:EntityWithProvenance ObjectAllValuesFrom(:used :EntityWithProvenance))
SubClassOf(:EntityWithProvenance ObjectMinCardinality(0 :reportsOn :Event))
SubClassOf(:EntityWithProvenance ObjectMaxCardinality(1 :hasOriginalSourceType :DocumentTypes))
SubClassOf(:EntityWithProvenance DataSomeValuesFrom(:availableFrom xsd:string))
SubClassOf(:EntityWithProvenance DataAllValuesFrom(:availableFrom xsd:string))
SubClassOf(:EntityWithProvenance DataMinCardinality(0 :hasReferenceURI xsd:anyURI))

# Class: :Event (:Event)

AnnotationAssertion(opla:isNativeTo :Event "https://enslaved.org/ontology/Event"^^rdfs:Literal)
SubClassOf(:Event ObjectSomeValuesFrom(:atPlace :Place))
SubClassOf(:Event ObjectAllValuesFrom(:hasEventType :EventTypes))
SubClassOf(:Event ObjectMinCardinality(0 :hasDescriptionText :Description))
SubClassOf(:Event ObjectMinCardinality(1 :hasExternalReference :ExternalReference))
SubClassOf(:Event ObjectMinCardinality(1 :providesParticipantRole :ParticipantRoleRecord))
SubClassOf(:Event ObjectExactCardinality(1 :hasEventType :EventTypes))
SubClassOf(:Event ObjectExactCardinality(1 :hasTemporalExtent :TemporalExtent))
SubClassOf(:Event ObjectHasSelf(:eventSelfProperty))
SubClassOf(:Event DataMinCardinality(1 :hasName xsd:string))

# Class: :EventTypes (:EventTypes)

AnnotationAssertion(opla:isNativeTo :EventTypes "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Class: :ExternalReference (:ExternalReference)

AnnotationAssertion(opla:isNativeTo :ExternalReference "https://enslaved.org/ontology/ExternalReference"^^rdfs:Literal)
SubClassOf(:ExternalReference ObjectIntersectionOf(ObjectMaxCardinality(1 :refersTo :ExternalReferent) DataMaxCardinality(1 :withID xsd:string)))
SubClassOf(:ExternalReference ObjectUnionOf(ObjectSomeValuesFrom(:refersTo :ExternalReferent) DataSomeValuesFrom(:withID xsd:string)))
SubClassOf(:ExternalReference ObjectAllValuesFrom(:refersTo :ExternalReferent))
SubClassOf(:ExternalReference DataAllValuesFrom(:withID xsd:string))

# Class: :ExternalReferent (:ExternalReferent)

AnnotationAssertion(opla:isNativeTo :ExternalReferent "https://enslaved.org/ontology/ExternalReference"^^rdfs:Literal)

# Class: :InterAgentRelationshipRecord (:InterAgentRelationshipRecord)

AnnotationAssertion(opla:isNativeTo :InterAgentRelationshipRecord "https://enslaved.org/ontology/InterAgentRelationshipRecord"^^rdfs:Literal)
SubClassOf(:InterAgentRelationshipRecord :AgentRecord)
SubClassOf(:InterAgentRelationshipRecord ObjectAllValuesFrom(:hasInterAgentRelationshipType :InterAgentRelationshipTypes))
SubClassOf(:InterAgentRelationshipRecord ObjectAllValuesFrom(:isRelationshipFrom :Agent))
SubClassOf(:InterAgentRelationshipRecord ObjectAllValuesFrom(:isRelationshipTo :Agent))
SubClassOf(:InterAgentRelationshipRecord ObjectExactCardinality(1 :isRelationshipFrom :Agent))
SubClassOf(:InterAgentRelationshipRecord ObjectExactCardinality(1 :isRelationshipTo :Agent))
SubClassOf(:InterAgentRelationshipRecord ObjectMaxCardinality(1 :hasInterAgentRelationshipType :InterAgentRelationshipTypes))

# Class: :InterAgentRelationshipTypes (:InterAgentRelationshipTypes)

AnnotationAssertion(opla:isNativeTo :InterAgentRelationshipTypes "https://enslaved.org/ontology/InterAgentRelationshipRecord"^^rdfs:Literal)

# Class: :LicenseInformation (:LicenseInformation)

AnnotationAssertion(opla:isNativeTo :LicenseInformation "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)

# Class: :NameRecord (:NameRecord)

AnnotationAssertion(opla:isNativeTo :NameRecord "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)
SubClassOf(:NameRecord :AgentRecord)
SubClassOf(:NameRecord ObjectSomeValuesFrom(:hasNameVariant :NameVariant))
SubClassOf(:NameRecord ObjectMaxCardinality(1 :hasPreferredNameVariant :NameVariant))
SubClassOf(:NameRecord DataExactCardinality(1 :fullNameAsString xsd:string))
SubClassOf(:NameRecord DataMaxCardinality(1 :hasFirstNameAsString xsd:string))
SubClassOf(:NameRecord DataMaxCardinality(1 :hasSurnameAsString xsd:string))

# Class: :NameVariant (:NameVariant)

AnnotationAssertion(opla:isNativeTo :NameVariant "https://enslaved.org/ontology/NameRecord"^^rdfs:Literal)

# Class: :OccupationRecord (:OccupationRecord)

AnnotationAssertion(opla:isNativeTo :OccupationRecord "https://enslaved.org/ontology/OccupationRecord"^^rdfs:Literal)
SubClassOf(:OccupationRecord :AgentRecord)
SubClassOf(:OccupationRecord ObjectExactCardinality(1 :hasValue :Occupations))

# Class: :Occupations (:Occupations)

AnnotationAssertion(opla:isNativeTo :Occupations "https://enslaved.org/ontology/OccupationRecord"^^rdfs:Literal)

# Class: :Organization (:Organization)

AnnotationAssertion(opla:isNativeTo :Organization "https://enslaved.org/ontology/AgentRole"^^rdfs:Literal)
SubClassOf(:Organization :Agent)

# Class: :OriginRecord (:OriginRecord)

AnnotationAssertion(opla:isNativeTo :OriginRecord "https://enslaved.org/ontology/OriginRecord"^^rdfs:Literal)
SubClassOf(:OriginRecord :AgentRecord)
SubClassOf(:OriginRecord ObjectUnionOf(ObjectSomeValuesFrom(:hasECVO :ECVO) ObjectSomeValuesFrom(:refersToPlaceOfOrigin :Place)))
SubClassOf(:OriginRecord ObjectAllValuesFrom(:hasECVO :ECVO))
SubClassOf(:OriginRecord ObjectAllValuesFrom(:refersToPlaceOfOrigin :Place))
SubClassOf(:OriginRecord ObjectMaxCardinality(1 :hasECVO :ECVO))

# Class: :PSCategories (:PSCategories)

AnnotationAssertion(opla:isNativeTo :PSCategories "https://enslaved.org/ontology/PersonStatusRecord"^^rdfs:Literal)

# Class: :ParticipantRoleRecord (:ParticipantRoleRecord)

AnnotationAssertion(opla:isNativeTo :ParticipantRoleRecord "https://enslaved.org/ontology/Event"^^rdfs:Literal)
SubClassOf(:ParticipantRoleRecord :AgentRecord)
SubClassOf(:ParticipantRoleRecord ObjectAllValuesFrom(:hasParticipantRoleType :ParticipantRoles))
SubClassOf(:ParticipantRoleRecord ObjectExactCardinality(1 ObjectInverseOf(:providesParticipantRole) :Event))
SubClassOf(:ParticipantRoleRecord ObjectMaxCardinality(1 :hasParticipantRoleType :ParticipantRoles))

# Class: :ParticipantRoles (:ParticipantRoles)

AnnotationAssertion(opla:isNativeTo :ParticipantRoles "https://enslaved.org/ontology/Event"^^rdfs:Literal)

# Class: :Person (:Person)

AnnotationAssertion(opla:isNativeTo :Person "https://enslaved.org/ontology/AgentRole"^^rdfs:Literal)
SubClassOf(:Person :Agent)
SubClassOf(:Person ObjectMinCardinality(0 :hasPersonRecord :PersonRecord))

# Class: :PersonRecord (:PersonRecord)

AnnotationAssertion(opla:isNativeTo :PersonRecord "https://enslaved.org/ontology/PersonRecord"^^rdfs:Literal)
SubClassOf(:PersonRecord :AgentRecord)
SubClassOf(:PersonRecord ObjectExactCardinality(1 ObjectInverseOf(:hasPersonRecord) :Person))

# Class: :PersonStatusRecord (:PersonStatusRecord)

AnnotationAssertion(opla:isNativeTo :PersonStatusRecord "https://enslaved.org/ontology/PersonStatusRecord"^^rdfs:Literal)
SubClassOf(:PersonStatusRecord :AgentRecord)
SubClassOf(:PersonStatusRecord ObjectAllValuesFrom(:hasStatusGeneratedEvent :Event))
SubClassOf(:PersonStatusRecord ObjectExactCardinality(1 :hasValue :PSCategories))

# Class: :Place (:Place)

AnnotationAssertion(opla:isNativeTo :Place "https://enslaved.org/ontology/Place"^^rdfs:Literal)
SubClassOf(:Place :EntityWithProvenance)
SubClassOf(:Place ObjectUnionOf(ObjectSomeValuesFrom(:asPlaceCV :PlacesCV) ObjectSomeValuesFrom(:hasCoordinates :Coordinates) ObjectSomeValuesFrom(:hasDescriptionText :Description) DataSomeValuesFrom(:hasName xsd:string)))
SubClassOf(:Place ObjectAllValuesFrom(:asPlaceCV :PlacesCV))
SubClassOf(:Place ObjectAllValuesFrom(:hasPlaceType :PlaceTypes))
SubClassOf(:Place ObjectMinCardinality(0 :hasDescriptionText :Description))
SubClassOf(:Place ObjectMinCardinality(0 :hasPlaceType :PlaceTypes))
SubClassOf(:Place ObjectMinCardinality(0 :spatiallyLocatedIn :Place))
SubClassOf(:Place DataMinCardinality(0 :hasAlternateName xsd:string))
SubClassOf(:Place DataExactCardinality(1 :hasName xsd:string))

# Class: :PlaceTypes (:PlaceTypes)

AnnotationAssertion(opla:isNativeTo :PlaceTypes "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Class: :PlacesCV (:PlacesCV)

AnnotationAssertion(opla:isNativeTo :PlacesCV "https://enslaved.org/ontology/Place"^^rdfs:Literal)

# Class: :ProvenanceActivity (:ProvenanceActivity)

AnnotationAssertion(opla:isNativeTo :ProvenanceActivity "https://enslaved.org/ontology/EntityWithProvenance"^^rdfs:Literal)
SubClassOf(:ProvenanceActivity ObjectAllValuesFrom(:performedBy :Agent))
SubClassOf(:ProvenanceActivity ObjectAllValuesFrom(:used :EntityWithProvenance))

# Class: :RaceRecord (:RaceRecord)

AnnotationAssertion(opla:isNativeTo :RaceRecord "https://enslaved.org/ontology/RaceRecord"^^rdfs:Literal)
SubClassOf(:RaceRecord :AgentRecord)
SubClassOf(:RaceRecord DataMaxCardinality(1 :asText xsd:string))

# Class: :ResearchProject (:ResearchProject)

AnnotationAssertion(opla:isNativeTo :ResearchProject "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)
SubClassOf(:ResearchProject :Event)
SubClassOf(:ResearchProject :ProvenanceActivity)

# Class: :ResearchProjectContributorRole (:ResearchProjectContributorRole)

AnnotationAssertion(opla:isNativeTo :ResearchProjectContributorRole "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)
SubClassOf(:ResearchProjectContributorRole :Researcher)
SubClassOf(:ResearchProjectContributorRole ObjectAllValuesFrom(ObjectInverseOf(:providesParticipantRole) :ResearchProject))

# Class: :ResearchProjectPIRole (:ResearchProjectPIRole)

AnnotationAssertion(opla:isNativeTo :ResearchProjectPIRole "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)
SubClassOf(:ResearchProjectPIRole :Researcher)
SubClassOf(:ResearchProjectPIRole ObjectAllValuesFrom(ObjectInverseOf(:providesParticipantRole) :ResearchProject))

# Class: :Researcher (:Researcher)

AnnotationAssertion(opla:isNativeTo :Researcher "https://enslaved.org/ontology/ResearchProject"^^rdfs:Literal)

# Class: :SexRecord (:SexRecord)

AnnotationAssertion(opla:isNativeTo :SexRecord "https://enslaved.org/ontology/SexRecord"^^rdfs:Literal)
SubClassOf(:SexRecord :AgentRecord)
SubClassOf(:SexRecord ObjectExactCardinality(1 :hasValue :SexTypes))

# Class: :SexTypes (:SexTypes)

AnnotationAssertion(opla:isNativeTo :SexTypes "https://enslaved.org/ontology/SexRecord"^^rdfs:Literal)

# Class: :TemporalExtent (:TemporalExtent)

AnnotationAssertion(opla:isNativeTo :TemporalExtent "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)
SubClassOf(:TemporalExtent ObjectAllValuesFrom(:fallsWithin :TimeSpan))
SubClassOf(:TemporalExtent DataAllValuesFrom(:contains xsd:date))
SubClassOf(:TemporalExtent DataAllValuesFrom(:endsAt xsd:date))
SubClassOf(:TemporalExtent DataAllValuesFrom(:occursAfter xsd:date))
SubClassOf(:TemporalExtent DataAllValuesFrom(:occursBefore xsd:date))
SubClassOf(:TemporalExtent DataAllValuesFrom(:startsAt xsd:date))

# Class: :TimeSpan (:TimeSpan)

AnnotationAssertion(opla:isNativeTo :TimeSpan "https://enslaved.org/ontology/TemporalExtent"^^rdfs:Literal)
SubClassOf(:TimeSpan :TemporalExtent)
SubClassOf(:TimeSpan DataSomeValuesFrom(:endsAt xsd:date))
SubClassOf(:TimeSpan DataSomeValuesFrom(:startsAt xsd:date))


SubClassOf(ObjectComplementOf(:Person) ObjectComplementOf(ObjectAllValuesFrom(:hasAgentRecord ObjectUnionOf(:AgeRecord :OccupationRecord :OriginRecord :PersonStatusRecord :RaceRecord :SexRecord))))
SubClassOf(ObjectSomeValuesFrom(:asPlaceCV :PlacesCV) :Place)
SubClassOf(ObjectSomeValuesFrom(:fallsWithin :TimeSpan) :TemporalExtent)
SubClassOf(ObjectSomeValuesFrom(:generatedBy :ProvenanceActivity) :EntityWithProvenance)
SubClassOf(ObjectSomeValuesFrom(:hasAgentRecord owl:Thing) :Agent)
SubClassOf(ObjectSomeValuesFrom(:hasCoordinates :Coordinates) :Place)
SubClassOf(ObjectSomeValuesFrom(:hasEventType :EventTypes) :Event)
SubClassOf(ObjectSomeValuesFrom(:hasInterAgentRelationshipType :InterAgentRelationshipTypes) :InterAgentRelationshipRecord)
SubClassOf(ObjectSomeValuesFrom(:hasOriginalSourceType :DocumentTypes) :EntityWithProvenance)
SubClassOf(ObjectSomeValuesFrom(:hasParticipantRoleType :ParticipantRoles) :ParticipantRoleRecord)
SubClassOf(ObjectSomeValuesFrom(:hasPlaceType :PlaceTypes) :Place)
SubClassOf(ObjectSomeValuesFrom(:hasStatusGeneratedEvent :Event) :PersonStatusRecord)
SubClassOf(ObjectSomeValuesFrom(:isRelationshipFrom :Agent) :InterAgentRelationshipRecord)
SubClassOf(ObjectSomeValuesFrom(:isRelationshipTo :Agent) :InterAgentRelationshipRecord)
SubClassOf(ObjectSomeValuesFrom(:performedBy :Agent) :ProvenanceActivity)
SubClassOf(ObjectSomeValuesFrom(:subeventOf :Event) :Event)
SubClassOf(ObjectSomeValuesFrom(:used :EntityWithProvenance) :ProvenanceActivity)
SubClassOf(DataSomeValuesFrom(:contains xsd:date) :TemporalExtent)
SubClassOf(DataSomeValuesFrom(:endsAt xsd:date) :TemporalExtent)
SubClassOf(DataSomeValuesFrom(:hasLatitude xsd:double) :Coordinates)
SubClassOf(DataSomeValuesFrom(:hasLongitude xsd:double) :Coordinates)
SubClassOf(DataSomeValuesFrom(:occursAfter xsd:date) :TemporalExtent)
SubClassOf(DataSomeValuesFrom(:occursBefore xsd:date) :TemporalExtent)
SubClassOf(DataSomeValuesFrom(:startsAt xsd:date) :TemporalExtent)
SubObjectPropertyOf(ObjectPropertyChain(:agentRecordSelfProperty :recordedAt :eventSelfProperty) :reportsOn)
SubObjectPropertyOf(ObjectPropertyChain(:isDirectlyBasedOn :hasOriginalSourceType) :hasOriginalSourceType)
SubObjectPropertyOf(ObjectPropertyChain(ObjectInverseOf(:isDirectlyBasedOn) ObjectInverseOf(:hasOriginalSourceType)) :hasOriginalSourceType)
)